import ru.surfstudio.android.build.Components
import ru.surfstudio.android.build.DependencyConfigurator

apply from: '../../buildSrc/config.gradle'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: '../../buildSrc/androidTestModule.gradle'

android {
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion project.ext.sampleMinSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode project.ext.moduleVersionCode
        versionName Components.getModuleVersion(project.name)
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    DependencyConfigurator.implementation(project, "org.jetbrains.kotlin:kotlin-stdlib-jdk7")
    DependencyConfigurator.implementation(project, "org.jetbrains.anko:anko-common")
    DependencyConfigurator.implementation(project, "androidx.appcompat:appcompat")
    DependencyConfigurator.implementation(project, "androidx.constraintlayout:constraintlayout")
}

dependencies {

}

task printTestInstrumentationRunnerName {
    doLast {
        println "$android.defaultConfig.testInstrumentationRunner"
    }
}

//временное решение для разрешения конфликтов версий сторонних зависимостей
configurations.all {
    resolutionStrategy.eachDependency { details ->
        libraryVersions.each { libName, version ->
            if ("${details.requested.group}:${details.requested.name}" == libName) {
                details.useVersion version
            }
        }
    }
}